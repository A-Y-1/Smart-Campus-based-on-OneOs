


ARM Macro Assembler    Page 1 


    1 00000000         ;/**
    2 00000000         ;*******************************************************
                       ********************************************************
                       ********
    3 00000000         ;* Copyright (c) 2020, China Mobile Communications Group
                        Co.,Ltd.
    4 00000000         ;*
    5 00000000         ;* Licensed under the Apache License, Version 2.0 (the "
                       License"); you may not use this file except in complianc
                       e with 
    6 00000000         ;* the License. You may obtain a copy of the License at
    7 00000000         ;*
    8 00000000         ;*     http://www.apache.org/licenses/LICENSE-2.0
    9 00000000         ;*
   10 00000000         ;* Unless required by applicable law or agreed to in wri
                       ting, software distributed under the License is distribu
                       ted on 
   11 00000000         ;* an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
                        ANY KIND, either express or implied. See the License fo
                       r the 
   12 00000000         ;* specific language governing permissions and limitatio
                       ns under the License.
   13 00000000         ;*
   14 00000000         ;* @file        arch_exception_rvds.S
   15 00000000         ;*
   16 00000000         ;* @brief       This file provides exception handlers re
                       lated to the ARM-v7M architecture, and the compiler uses
                        armcc.
   17 00000000         ;*
   18 00000000         ;* @revision
   19 00000000         ;* Date         Author          Notes
   20 00000000         ;* 2021-01-23   OneOS Team      First version.
   21 00000000         ;*******************************************************
                       ********************************************************
                       ********
   22 00000000         ;*/
   23 00000000         
   24 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   25 00000000                 THUMB
   26 00000000                 REQUIRE8
   27 00000000                 PRESERVE8
   28 00000000         
   29 00000000                 IMPORT           os_arch_fault_exception
   30 00000000         
   31 00000000                 EXPORT           HardFault_Handler
   32 00000000         
   33 00000000         ;/**
   34 00000000         ; ******************************************************
                       ********************************************************
                       *********
   35 00000000         ; * @brief           HardFault interrupt handler.
   36 00000000         ; *
   37 00000000         ; * @param           None.
   38 00000000         ; *
   39 00000000         ; * @return          None.
   40 00000000         ; ******************************************************
                       ********************************************************
                       *********



ARM Macro Assembler    Page 2 


   41 00000000         ; */
   42 00000000         HardFault_Handler
                               PROC
   43 00000000         ; /* Get current context */
   44 00000000 F01E 0F04       TST              LR, #0x04
   45 00000004 BF0C            ITE              EQ
   46 00000006 F3EF 8008       MRSEQ            R0, MSP     ; /* EXC_RETURN[2] 
                                                            = 0, get fault cont
                                                            ext from handler. *
                                                            /
   47 0000000A F3EF 8009       MRSNE            R0, PSP     ; /* EXC_RETURN[2] 
                                                            = 1, get fault cont
                                                            ext from task. */
   48 0000000E         
   49 0000000E         ; /* begin: Push FPU registers, R4 - R11 and LR */
   50 0000000E                 IF               {FPU} != "SoftVFP"
   51 0000000E F01E 0F10       TST              LR,  #0x10
   52 00000012 BF08 ED20 
              8B10             VSTMFDEQ         R0!, {D8 - D15}
   53 00000018                 ENDIF
   54 00000018         
   55 00000018 E920 4FF0       STMFD            R0!, {R4 - R11, LR}
   56 0000001C         ; /* end: Push FPU registers, R4 - R11 and LR */
   57 0000001C         
   58 0000001C F01E 0F04       TST              LR,  #0x04
   59 00000020 BF0C            ITE              EQ
   60 00000022 F380 8808       MSREQ            MSP, R0     ; /* EXC_RETURN[2] 
                                                            = 0, update stack p
                                                            ointer to MSP. */
   61 00000026 F380 8809       MSRNE            PSP, R0     ; /* EXC_RETURN[2] 
                                                            = 1, update stack p
                                                            ointer to PSP. */
   62 0000002A         
   63 0000002A F3EF 8108       MRS              R1,  MSP
   64 0000002E F3EF 8209       MRS              R2,  PSP
   65 00000032 B500            PUSH             {LR}
   66 00000034 F7FF FFFE       BL               os_arch_fault_exception
   67 00000038 F85D EB04       POP              {LR}
   68 0000003C         
   69 0000003C 4770            BX               LR
   70 0000003E                 ENDP
   71 0000003E         
   72 0000003E         
   73 0000003E 00 00           ALIGN            4
   74 00000040                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\build\keil\obj\arch_exception_rvds.d -o.\build\keil\obj\arch_
exception_rvds.o -I.\RTE\_oneos -ID:\LenovoSoftstore\Install\KEIL\ARM\PACK\Keil
\STM32L4xx_DFP\2.6.1\Drivers\CMSIS\Device\ST\STM32L4xx\Include -ID:\LenovoSofts
tore\Install\KEIL\ARM\CMSIS\Include --predefine="__UVISION_VERSION SETA 525" --
predefine="STM32L475xx SETA 1" --predefine="OS_TASK_SWITCH_NOTIFY SETA 1" --lis
t=.\build\keil\list\arch_exception_rvds.lst ..\..\arch\arm\armv7m\rvds\arch_exc
eption_rvds.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 24 in file ..\..\arch\arm\armv7m\rvds\arch_exception_rvds.S
   Uses
      None
Comment: .text unused
HardFault_Handler 00000000

Symbol: HardFault_Handler
   Definitions
      At line 42 in file ..\..\arch\arm\armv7m\rvds\arch_exception_rvds.S
   Uses
      At line 31 in file ..\..\arch\arm\armv7m\rvds\arch_exception_rvds.S
Comment: HardFault_Handler used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

os_arch_fault_exception 00000000

Symbol: os_arch_fault_exception
   Definitions
      At line 29 in file ..\..\arch\arm\armv7m\rvds\arch_exception_rvds.S
   Uses
      At line 66 in file ..\..\arch\arm\armv7m\rvds\arch_exception_rvds.S
Comment: os_arch_fault_exception used once
1 symbol
337 symbols in table
